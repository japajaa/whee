{"version":3,"sources":["ProductCard.tsx","CartDialog.tsx","WheeAppBar.tsx","App.tsx","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","root","display","margin","spacing","padding","maxWidth","boxShadow","position","details","flexDirection","flexGrow","content","flex","paddingTop","cover","width","height","headerText","fontStyle","paddingBottom","button","borderRadius","border","fontSize","fontWeight","paddingLeft","paddingRight","ProductCard","title","description","price","src","id","classes","useTheme","noImage","useMediaQuery","breakpoints","down","addItem","useCart","Card","className","CardMedia","image","CardHeader","disableTypography","Typography","variant","style","CardContent","textAlign","Button","onClick","parseInt","quantityButton","marginRight","marginLeft","quantityText","CartDialog","onClose","open","fullScreen","totalCost","items","removeItem","updateItemQuantity","Dialog","aria-labelledby","fullWidth","DialogTitle","DialogContent","List","dense","length","map","item","ListItem","ListItemAvatar","Avatar","alt","ListItemText","primary","secondary","quantity","ListItemSecondaryAction","IconButton","size","aria-label","DialogActions","autoFocus","cartButton","color","backgroundColor","alignItems","inlineText","fontFamily","whee","appBar","background","palette","default","backgroundPosition","backgroundRepeat","backgroundSize","WheeAppBar","React","useState","setOpen","hideDescription","totalItems","AppBar","Toolbar","mockData","wheeTheme","createMuiTheme","typography","h4","lineHeight","App","ThemeProvider","CssBaseline","Container","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ffb88ebc.chunk.js","sourcesContent":["import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { useCart } from \"react-hook-cart\";\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { useTheme } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: 'flex',\r\n      margin: `${theme.spacing(2)}px auto`,\r\n      padding: theme.spacing(1),\r\n      maxWidth: '800px',\r\n      boxShadow: 'none',\r\n      position: 'relative'\r\n    },\r\n    details: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      flexGrow: 2\r\n    },\r\n    content: {\r\n      flex: '1 0 auto',\r\n      maxWidth: '353px',\r\n      paddingTop: '0px'\r\n    },\r\n    cover: {\r\n      width: 125,\r\n      height: 125\r\n    },\r\n    headerText: {\r\n        fontStyle: 'italic',\r\n        paddingBottom: '0px'\r\n    },\r\n    button: {\r\n        borderRadius: '0px', \r\n        border: '2px solid black', \r\n        fontSize: '18px', \r\n        fontWeight: 700,\r\n        paddingLeft: theme.spacing(3),\r\n        paddingRight: theme.spacing(3)\r\n    }\r\n  }),\r\n);\r\n\r\ninterface ProductCardProps {\r\n    title: string;\r\n    description: string;\r\n    price: string;\r\n    src: string;\r\n    id: string;\r\n}\r\n\r\n// ProductCard component to visualize the data as cards.\r\nconst ProductCard = ({title, description, price, src, id}: ProductCardProps) => {\r\n\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    // logic for hiding the product image when using extra small screens.\r\n    const noImage = useMediaQuery(theme.breakpoints.down('xs'));\r\n\r\n    const { addItem } = useCart();    \r\n    return (\r\n      <Card className={classes.root}>\r\n        {noImage ? null : <CardMedia className={classes.cover} image={src} />}\r\n        <div className={classes.details}>\r\n            <CardHeader disableTypography title={<Typography variant=\"h4\" style={{fontWeight: 700}}>{title}</Typography>} className={classes.headerText}/>\r\n            <CardContent className={classes.content}><Typography variant=\"body2\">{description}</Typography></CardContent>\r\n        </div>\r\n        <div className={classes.details} style={{flexGrow: 0, paddingBottom: '24px'}}>\r\n            <Typography variant=\"h4\" style={{textAlign: 'right'}}>{price}</Typography>\r\n            <Button variant=\"outlined\" className={classes.button} onClick={()=>addItem({id: id, price: parseInt(price), title:title, src: src}, 1)}>Add to cart</Button>\r\n        </div>\r\n      </Card>\r\n    );\r\n  }\r\n  \r\n  export default ProductCard;","import React from 'react';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { useCart } from \"react-hook-cart\";\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    quantityButton: {\r\n      marginRight: theme.spacing(1),\r\n      marginLeft: theme.spacing(1),\r\n    },\r\n    quantityText: {\r\n      display:'inline-block', \r\n      width:'10px', \r\n      textAlign: 'center'\r\n    }\r\n  }),\r\n);\r\n\r\ninterface CartDialogProps {\r\n    onClose: () => void;\r\n    open: boolean;\r\n}\r\n\r\n// CartDialog for visualizing the items in shopping cart\r\n// The \"Proceed to checkout button\" has onClose function as a placeholder. Should be replaced by function triggering the payment flow.\r\nconst CartDialog = ({ onClose, open }: CartDialogProps) => {\r\n  const theme = useTheme();\r\n  const classes = useStyles();\r\n  // logic to display dialog in fullscreen mode for extra small screens.\r\n  const fullScreen = useMediaQuery(theme.breakpoints.down('xs'));\r\n  const { totalCost, items, removeItem, updateItemQuantity } = useCart();\r\n\r\n  return (\r\n      <Dialog\r\n        fullScreen={fullScreen}\r\n        open={open}\r\n        onClose={onClose}\r\n        aria-labelledby=\"shopping-cart-title\"\r\n        fullWidth\r\n      >\r\n        <DialogTitle id=\"shopping-cart-title\">Shopping cart</DialogTitle>\r\n        <DialogContent>\r\n          <List dense>\r\n              {items.length === 0 ? <Typography variant=\"body2\">No items in cart</Typography> : items.map((item) => (\r\n                <ListItem key={item.id}>\r\n                  <ListItemAvatar>\r\n                    <Avatar variant=\"square\" src={item.src} alt={item.title} />\r\n                  </ListItemAvatar>\r\n                  <ListItemText\r\n                    primary={`${item.title}`}\r\n                    secondary={`${item.price} x ${item.quantity}€ = ${item.price * (item.quantity || 0)}€`}\r\n                  />\r\n                  <ListItemSecondaryAction>\r\n                    <IconButton size=\"small\" className={classes.quantityButton} aria-label=\"remove\" onClick={() => updateItemQuantity(item.id, (item.quantity ? (item.quantity - 1): 0))}>\r\n                      <RemoveIcon />\r\n                    </IconButton>\r\n                    <span className={classes.quantityText}>{item.quantity}</span>\r\n                    <IconButton size=\"small\" className={classes.quantityButton} aria-label=\"add\" onClick={() => updateItemQuantity(item.id,  (item.quantity ? (item.quantity + 1): 0))}>\r\n                      <AddIcon />\r\n                    </IconButton>\r\n                    <IconButton size=\"small\" aria-label=\"delete\" onClick={() => removeItem(item.id)}>\r\n                      <DeleteIcon />\r\n                    </IconButton>\r\n                  </ListItemSecondaryAction>\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n            <Typography variant=\"h6\">GRAND TOTAL: {totalCost}€</Typography>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={onClose}>\r\n            Proceed to checkout\r\n          </Button>\r\n          <Button autoFocus onClick={onClose}>\r\n            Continue shopping\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    );\r\n  }\r\n  \r\n  export default CartDialog;","import React from 'react';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport { useCart } from \"react-hook-cart\";\r\nimport CartDialog from './CartDialog';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { useTheme } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    cartButton: {\r\n      marginRight: theme.spacing(2),\r\n      marginLeft: theme.spacing(2),\r\n      color: \"#ebebeb\",\r\n      backgroundColor: \"#000000\"\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n      display: 'flex',\r\n      alignItems: 'center'\r\n    },\r\n    inlineText: {\r\n      display: 'inline',\r\n      fontFamily: 'Playfair Display',\r\n      fontStyle: 'italic',\r\n      fontSize: '16px',\r\n      paddingLeft: theme.spacing(6)\r\n    },\r\n    whee: {\r\n      display: 'inline',\r\n      fontFamily: 'Pacifico',\r\n      fontSize: '66px'\r\n    },\r\n    appBar: {\r\n      background: `linear-gradient(-135deg, #e2e2e2 30px, transparent 0) 0 30px, linear-gradient(135deg, #e2e2e2 30px, ${theme.palette.background.default} 0) 0 30px, linear-gradient(0deg, pink 0%, green 100%)`,\r\n      backgroundPosition: \"left bottom\",\r\n      backgroundColor: \"#e2e2e2\",\r\n      backgroundRepeat: \"repeat-x\",\r\n      backgroundSize: \"60px 60px\",\r\n      boxShadow: \"none\",\r\n      height: '150px',\r\n      color: '#000000'\r\n    }\r\n  }),\r\n);\r\n\r\n// Sticky AppBar with embedded CartDialog component for visualizing the shopping cart\r\nconst WheeAppBar = () => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  // logic for hiding the description text in AppBar, when using extra small screens.\r\n  const hideDescription = useMediaQuery(theme.breakpoints.down('xs'));\r\n  const { totalItems } = useCart();\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AppBar position=\"sticky\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <div className={classes.title}>\r\n            <Typography variant=\"h6\" className={classes.whee}>\r\n              whee\r\n            </Typography>\r\n            {!hideDescription ? \r\n            <Typography variant=\"h6\" className={classes.inlineText}>\r\n              The most definitive shape store in the world\r\n            </Typography> : null }\r\n          </div>\r\n          <Typography variant=\"body2\" className={classes.inlineText}>\r\n            {totalItems === 0 ? 'No items in cart' : `${totalItems} item(s) in cart`}\r\n          </Typography>\r\n          <IconButton className={classes.cartButton} aria-label=\"shoppingCart\" onClick={handleClickOpen}>\r\n            <ShoppingCartIcon />\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <CartDialog open={open} onClose={handleClose} />\r\n    </>\r\n  );\r\n}\r\n  \r\n  export default WheeAppBar;","import React from 'react';\r\nimport ProductCard from './ProductCard';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Container from '@material-ui/core/Container';\r\nimport WheeAppBar from './WheeAppBar';\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport { CartProvider } from \"react-hook-cart\";\r\n\r\n\r\n// Mock data used in client. This should be coming from backend...\r\nconst mockData = [\r\n  {\r\n    title: \"Circle\",\r\n    description: \"Perfect choice when you don't need any corners.\",\r\n    price: \"999 €\",\r\n    src: \"./circle.svg\",\r\n    id: \"circle1\"\r\n  },\r\n  {\r\n    title: \"Rectangle\",\r\n    description: \"For once, It's a great idea to think inside the box.\",\r\n    price: \"899 €\",\r\n    src: \"./rectangle.svg\",\r\n    id: \"rectangle1\"\r\n  },\r\n  {\r\n    title: \"Triangle\",\r\n    description: \"A true classic with three elegant corners.\",\r\n    price: \"1009 €\",\r\n    src: \"./triangle.svg\",\r\n    id: \"triangle1\"\r\n  }\r\n]\r\n\r\n// Create a theme for MaterialUI.\r\nconst wheeTheme = createMuiTheme({\r\n  palette: {\r\n    background: {\r\n      default: '#ffffff'\r\n    }\r\n  },\r\n  typography: {\r\n    fontFamily: 'Playfair Display, Roboto, sans-serif, Helvetica',\r\n    h4: {\r\n      fontSize: '2.25rem',\r\n      lineHeight: '3.75rem'\r\n    }\r\n  }\r\n});\r\n\r\nfunction App() {\r\n  return (\r\n    <CartProvider>\r\n      <ThemeProvider theme={wheeTheme}>\r\n        <CssBaseline />\r\n        <WheeAppBar />\r\n        <Container>\r\n          {mockData.map((item: any) => <ProductCard key={item.id} id={item.id} src={item.src} title={item.title} description={item.description} price={item.price}/>)}\r\n        </Container>\r\n      </ThemeProvider>\r\n    </CartProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}